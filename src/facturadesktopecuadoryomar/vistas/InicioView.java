package facturadesktopecuadoryomar.vistas;

import com.ecuasis.coresri.servicios.ServiciosSRI;
import facturadesktopecuadoryomar.hilos.ActualizarClienteDocumentos;
import facturadesktopecuadoryomar.hilos.EnvioCorreoDocumentos;
import facturadesktopecuadoryomar.hilos.EnvioDocumentosSri;
import facturadesktopecuadoryomar.hilos.FirmadoDocumentos;
import facturadesktopecuadoryomar.hilos.GenerarDocumentos;
import facturadesktopecuadoryomar.hilos.RecepcionDocumentosSri;
import facturadesktopecuadoryomar.modelo.servidor.Usuario;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.LayoutManager;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class InicioView extends JFrame {
  private int x, y;
  private Usuario usuario;
  public boolean creacion = false;
  public boolean actualizacion = false; 
  public boolean envioSRI = false; 
  public boolean recepcionSRI = false; 
  public boolean correo = false; 
  public boolean firma = false;
  private ServiciosSRI sri = new ServiciosSRI(); 

  //Hilos de Aplicacion****************************************************************************************
  GenerarDocumentos crearDocumentos;
  ActualizarClienteDocumentos actualizarCliente;
  EnvioCorreoDocumentos envioCorreos;
  EnvioDocumentosSri envio;
  RecepcionDocumentosSri recepcion;
  FirmadoDocumentos firmado;
  //***********************************************************************************************************
  private JButton btActualizacionCliente;
  private JButton btEnvioCorreo;
  
  public InicioView(Usuario usua) {
    initComponents();
    this.usuario = usua;
    this.btGeneracion.setBackground(Color.white);
    this.btActualizacionCliente.setBackground(Color.white);
    this.btEnvioSri.setBackground(Color.white);
    this.btRecepcion.setBackground(Color.white);
    this.btEnvioCorreo.setBackground(Color.white);
  }
  
  private JButton btEnvioSri;
  private JButton btFirmado;
  private JButton btGeneracion;
  private JButton btRecepcion;
  private JLabel jLabel1;
  private JLabel lbBotonCerrar;
  private JLabel lbFondo;
  private JLabel lbTitulo;
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    this.btEnvioCorreo = new JButton();
    this.btRecepcion = new JButton();
    this.btActualizacionCliente = new JButton();
    this.btEnvioSri = new JButton();
    this.lbTitulo = new JLabel();
    this.jLabel1 = new JLabel();
    this.btGeneracion = new JButton();
    this.lbBotonCerrar = new JLabel();
    this.btFirmado = new JButton();
    this.lbFondo = new JLabel();
    
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setUndecorated(true);
    addMouseMotionListener(new MouseMotionAdapter() {
          public void mouseDragged(MouseEvent evt) {
            InicioView.this.formMouseDragged(evt);
          }
        });
    addMouseListener(new MouseAdapter() {
          public void mousePressed(MouseEvent evt) {
            InicioView.this.formMousePressed(evt);
          }
        });
    getContentPane().setLayout(null);
    
    this.btEnvioCorreo.setText("ACTIVAR ENVIO DE CORREOS");
    this.btEnvioCorreo.setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    this.btEnvioCorreo.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent evt) {
            InicioView.this.btEnvioCorreoActionPerformed(evt);
          }
        });
    getContentPane().add(this.btEnvioCorreo);
    this.btEnvioCorreo.setBounds(280, 470, 450, 70);
    
    this.btRecepcion.setText("ACTIVAR RECEPCION DE DOCUMENTOS SRI");
    this.btRecepcion.setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    this.btRecepcion.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent evt) {
            InicioView.this.btRecepcionActionPerformed(evt);
          }
        });
    getContentPane().add(this.btRecepcion);
    this.btRecepcion.setBounds(280, 390, 450, 70);
    
    this.btActualizacionCliente.setText("ACTIVAR ACTUALIZACION DE DOCUMENTOS EN CLIENTE");
    this.btActualizacionCliente.setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    this.btActualizacionCliente.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent evt) {
            InicioView.this.btActualizacionClienteActionPerformed(evt);
          }
        });
    getContentPane().add(this.btActualizacionCliente);
    this.btActualizacionCliente.setBounds(280, 230, 450, 70);
    
    this.btEnvioSri.setText("ACTIVAR ENVIO A SRI");
    this.btEnvioSri.setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    this.btEnvioSri.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent evt) {
            InicioView.this.btEnvioSriActionPerformed(evt);
          }
        });
    getContentPane().add(this.btEnvioSri);
    this.btEnvioSri.setBounds(280, 310, 450, 70);
    
    this.lbTitulo.setFont(new Font("Tahoma", 0, 18));
    this.lbTitulo.setForeground(new Color(255, 255, 255));
    this.lbTitulo.setText("AGUAPEN-EP ");
    getContentPane().add(this.lbTitulo);
    this.lbTitulo.setBounds(170, 10, 120, 30);
    
    this.jLabel1.setFont(new Font("Tahoma", 0, 14));
    this.jLabel1.setForeground(new Color(255, 255, 255));
    this.jLabel1.setText("Facturacion Electronica");
    getContentPane().add(this.jLabel1);
    this.jLabel1.setBounds(20, 10, 180, 30);
    
    this.btGeneracion.setText("ACTIVAR GENERACION DE DOCUMENTOS");
    this.btGeneracion.setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    this.btGeneracion.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent evt) {
            InicioView.this.btGeneracionActionPerformed(evt);
          }
        });
    getContentPane().add(this.btGeneracion);
    this.btGeneracion.setBounds(280, 150, 450, 70);
    
    this.lbBotonCerrar.setIcon(new ImageIcon(getClass().getResource("/facturadesktopecuadoryomar/recursos/imagenes/boton_cerrar_new.png")));
    this.lbBotonCerrar.setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    this.lbBotonCerrar.addMouseListener(new MouseAdapter() {
          public void mouseClicked(MouseEvent evt) {
            InicioView.this.lbBotonCerrarMouseClicked(evt);
          }
          public void mouseEntered(MouseEvent evt) {
            InicioView.this.lbBotonCerrarMouseEntered(evt);
          }
          public void mouseExited(MouseEvent evt) {
            InicioView.this.lbBotonCerrarMouseExited(evt);
          }
          public void mouseReleased(MouseEvent evt) {
            InicioView.this.lbBotonCerrarMouseReleased(evt);
          }
        });
    getContentPane().add(this.lbBotonCerrar);
    this.lbBotonCerrar.setBounds(970, 0, 50, 50);
    
    this.btFirmado.setText("FIRMADO DE DOCUMENTOS");
    this.btFirmado.setCursor(new Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    this.btFirmado.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent evt) {
            InicioView.this.btFirmadoActionPerformed(evt);
          }
        });
    getContentPane().add(this.btFirmado);
    this.btFirmado.setBounds(280, 550, 450, 70);
    
    this.lbFondo.setIcon(new ImageIcon(getClass().getResource("/facturadesktopecuadoryomar/recursos/imagenes/Fondo.png")));
    getContentPane().add(this.lbFondo);
    this.lbFondo.setBounds(0, 0, 1030, 710);
    
    pack();
  }
  
  private void lbBotonCerrarMouseClicked(MouseEvent evt) {
    System.exit(0);
  }
  
  private void lbBotonCerrarMouseEntered(MouseEvent evt) {
    this.lbBotonCerrar.setIcon(new ImageIcon(getClass().getResource("/facturadesktopecuadoryomar/recursos/imagenes/boton_cerrar_sel_new.png")));
  }
  
  private void lbBotonCerrarMouseExited(MouseEvent evt) {
    this.lbBotonCerrar.setIcon(new ImageIcon(getClass().getResource("/facturadesktopecuadoryomar/recursos/imagenes/boton_cerrar_new.png")));
  }
  
  private void lbBotonCerrarMouseReleased(MouseEvent evt) {
    this.lbBotonCerrar.setIcon(new ImageIcon(getClass().getResource("/facturadesktopecuadoryomar/recursos/imagenes/boton_cerrar_new.png")));
  }
  
  private void formMousePressed(MouseEvent evt) {
    this.x = evt.getX();
    this.y = evt.getY();
  }
  
  private void formMouseDragged(MouseEvent evt) {
    Point p = MouseInfo.getPointerInfo().getLocation();
    setLocation(p.x - this.x, p.y - this.y);
  }

  private void btActualizacionClienteActionPerformed(ActionEvent evt) {}
  
  private void btGeneracionActionPerformed(ActionEvent evt) {
    this.creacion = !this.creacion;
    if (this.creacion) {
      this.crearDocumentos = new GenerarDocumentos();
      this.crearDocumentos.start();
      this.btGeneracion.setBackground(Color.red);
    } else {
      this.crearDocumentos.detenerProceso();
      this.btGeneracion.setBackground(Color.white);
    } 
  }
  
  private void btEnvioSriActionPerformed(ActionEvent evt) {
    this.envioSRI = !this.envioSRI;
    if (this.envioSRI) {
      this.envio = new EnvioDocumentosSri(this.sri);
      this.envio.start();
      this.btEnvioSri.setBackground(Color.red);
    } else {
      this.envio.detenerProceso();
      this.btEnvioSri.setBackground(Color.white);
    } 
  }
  
  private void btRecepcionActionPerformed(ActionEvent evt) {
    this.recepcionSRI = !this.recepcionSRI;
    if (this.recepcionSRI) {
      this.recepcion = new RecepcionDocumentosSri(this.sri);
      this.recepcion.start();
      this.btRecepcion.setBackground(Color.red);
    } else {
      this.recepcion.detenerProceso();
      this.btRecepcion.setBackground(Color.white);
    } 
  }
  
  private void btEnvioCorreoActionPerformed(ActionEvent evt) {
    this.correo = !this.correo;
    if (this.correo) {
      this.envioCorreos = new EnvioCorreoDocumentos();
      this.envioCorreos.start();
      this.btEnvioCorreo.setBackground(Color.red);
    } else {
      this.envioCorreos.detenerProceso();
      this.btEnvioCorreo.setBackground(Color.white);
    } 
  }
  
  private void btFirmadoActionPerformed(ActionEvent evt) {
    this.firma = !this.firma;
    if (this.firma) {
      this.firmado = new FirmadoDocumentos();
      this.firmado.start();
      this.btFirmado.setBackground(Color.red);
    } else {
      this.firmado.detenerProceso();
      this.btFirmado.setBackground(Color.white);
    } 
  }
}